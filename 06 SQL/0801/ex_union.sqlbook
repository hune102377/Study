-- SQLBook: Code
-- Active: 1658998305252@@127.0.0.1@3306@sakila
select 'CUST' as type1, c.first_name, c.last_name
from customer as c
union ALL
select 'ACTR' as type1, a.first_name, a.last_name
from actor as a;
-- SQLBook: Markup
actor 테이블에 union_all 연산 수행  
§ 중복 항목 제거 안함  
§ 총 데이터수가 400개로 늘어남
-- SQLBook: Code
select 'ACTR' as typ, a.first_name, a.last_name
from actor as a
union all
select 'ACTR' as type, a.first_name, a.last_name
from actor as a;
-- SQLBook: Markup
customer 테이블과 actor 테이블에서  
§ 이름이 ‘J’로 시작하고 성은 ‘D’로 시작하는 사람들의 합집합:  
union all (중복)
-- SQLBook: Code
select 'cust' as type1, c.first_name, c.last_name
from customer as c
where c.first_name like 'J%' and c.last_name like 'D%'
union all
select 'actor' as type1, a.first_name, a.last_name
from actor as a
where a.first_name like 'J%' and a.last_name like 'D%';
-- SQLBook: Markup
union
§ 중복 데이터 제거
-- SQLBook: Code
select c.first_name, c.last_name
from customer as c
where c.first_name like 'J%' and c.last_name like 'D%'
union
select a.first_name, a.last_name
from actor as a
where a.first_name like 'J%' and a.last_name like 'D%';
-- SQLBook: Markup
union 이지만 새로운 열을 넣어버리면 중복이 아니게 되니까 중복 제거가 안됨
-- SQLBook: Code
select 'c' as type1, c.first_name, c.last_name
from customer as c
where c.first_name like 'J%' and c.last_name like 'D%'
union
select 'a' as type1, a.first_name, a.last_name
from actor as a
where a.first_name like 'J%' and a.last_name like 'D%';
-- SQLBook: Markup
복합 쿼리의 결과 정렬  
§ order by 절을 쿼리 마지막에 추가  
• 열 이름 정의는 복합 쿼리의 첫 번째 쿼리에 있는 열의 이름을 사용해야 됨
-- SQLBook: Code
select a.first_name as fname, a.last_name as lname
from actor as a
where a.first_name like 'J%' and a.last_name like 'D%'
union ALL
select c.first_name, c.last_name
from customer as c
where c.first_name like 'J%' and c.last_name like 'D%'
order by lname, fname;
-- SQLBook: Code
select a.first_name as fname, a.last_name as lname
from actor as a
where a.first_name like 'J%' and a.last_name like 'D%'
union all
select c.first_name, c.last_name
from customer as c
where c.first_name like 'J%' and c.last_name like 'D%'
order by last_name, first_name;

-- SQLBook: Markup
§ 복합 쿼리는 위에서 아래의 순서대로 실행  
§ 예외:  
• intersect 연산자가 다른 집합 연산자보다 우선 순위가 높음
-- SQLBook: Code
select a.first_name, a.last_name
from actor as a
where a.first_name like 'J%' and a.last_name like 'D%'
union all 
select a.first_name, a.last_name
from actor as a
where a.first_name like 'M%' and a.last_name like 'T%'
union
select c.first_name, c.last_name
from customer as c
where c.first_name like 'J%' and c.last_name like 'D%';
-- SQLBook: Code
select a.first_name, a.last_name
from actor as a
where a.first_name like 'J%' and a.last_name like 'D%'
union
select a.first_name, a.last_name
from actor as a
where a.first_name like 'M%' and a.last_name like 'T%'
union all
select c.first_name, c.last_name
from customer as c
where c.first_name like 'J%' and c.last_name like 'D%';
-- SQLBook: Markup
두 코드의 결과값이 다름  
중복 허용 > 중복 제거  
중복 제거 > 중복 허용 순  
-- SQLBook: Markup
